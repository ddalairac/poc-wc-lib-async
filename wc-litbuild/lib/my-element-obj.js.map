{"version":3,"file":"my-element-obj.js","sourceRoot":"","sources":["../src/my-element-obj.ts"],"names":[],"mappings":"AAAA;;;;GAIG;;;;;;;;;;AAEH,OAAO,EACL,UAAU,EACV,IAAI;AACJ,OAAO;EACR,MAAM,KAAK,CAAC;AACb,OAAO,EAAE,aAAa,EAAE,QAAQ,EAAE,MAAM,mBAAmB,CAAC;AAE5D;;;;;;GAMG;AAEH,IAAa,YAAY,GAAzB,MAAa,YAAa,SAAQ,UAAU;IAA5C;;QACE,gCAAgC;QAChC,YAAY;QACZ,sBAAsB;QACtB,8BAA8B;QAC9B,qBAAqB;QACrB,wBAAwB;QACxB,MAAM;QACN,KAAK;QACG,SAAI,GAAW,CAAC,CAAC;QAajB,SAAI,GAAa,CAAC,CAAC,CAAC,CAAC;IAkC/B,CAAC;IA7C6B,IAAI,GAAG,CAAC,GAAW;QAC7C,OAAO,CAAC,GAAG,CAAC,KAAK,EAAE,GAAG,EAAE,IAAI,CAAC,IAAI,CAAC,CAAA;QAClC,MAAM,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC;QAC3B,IAAI,CAAC,IAAI,GAAG,GAAG,CAAC;QAChB,IAAI,CAAC,aAAa,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAC;IACtC,CAAC;IAED,IAAI,GAAG;QACL,OAAO,IAAI,CAAC,IAAI,CAAC;IACnB,CAAC;IAI0B,IAAI,GAAG,CAAC,GAAa;QAC9C,OAAO,CAAC,GAAG,CAAC,SAAS,EAAE,GAAG,EAAE,IAAI,CAAC,IAAI,CAAC,CAAA;QACtC,MAAM,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC;QAC3B,IAAI,CAAC,IAAI,GAAG,GAAG,CAAC;QAChB,IAAI,CAAC,aAAa,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAC;IACtC,CAAC;IAED,IAAI,GAAG;QACL,OAAO,IAAI,CAAC,IAAI,IAAI,CAAC,YAAY,CAAC,CAAC;IACrC,CAAC;IAED,UAAU;QACR,MAAM,aAAa,GAAG,EAAE,CAAC;QACzB,KAAK,MAAM,IAAI,IAAI,IAAI,CAAC,GAAG,EAAE;YAC3B,aAAa,CAAC,IAAI,CAAC,IAAI,CAAA,OAAO,IAAI,OAAO,CAAC,CAAC;SAC5C;QACD,OAAO,CAAC,GAAG,CAAC,aAAa,CAAC,CAAA;QAC1B,OAAO,aAAa,CAAA;IACtB,CAAC;IAEQ,MAAM;QACb,OAAO,IAAI,CAAA;;gBAEC,IAAI,CAAC,GAAG;gBACR,IAAI,CAAC,GAAG;;UAEd,IAAI,CAAC,UAAU,EAAE;;;KAGtB,CAAC;IACJ,CAAC;CAEF,CAAA;AA7C6B;IAA3B,QAAQ,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC;;;uCAK1B;AAQ0B;IAA1B,QAAQ,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC;;;uCAKzB;AA7BU,YAAY;IADxB,aAAa,CAAC,gBAAgB,CAAC;GACnB,YAAY,CAwDxB;SAxDY,YAAY","sourcesContent":["/**\n * @license\n * Copyright 2019 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\nimport {\n  LitElement,\n  html,\n  // css \n} from 'lit';\nimport { customElement, property } from 'lit/decorators.js';\n\n/**\n * An example element.\n *\n * @fires count-changed - Indicates when the count changes\n * @slot - This element has a slot\n * @csspart button - The button\n */\n@customElement('my-element-obj')\nexport class MyElementObj extends LitElement {\n  // static override styles = css`\n  //   :host {\n  //     display: block;\n  //     border: solid 1px gray;\n  //     padding: 16px;\n  //     max-width: 800px;\n  //   }\n  // `;\n  private _num: number = 0;\n\n  @property({ type: Number }) set num(num: number) {\n    console.log(\"num\", num, this._num)\n    const oldValue = this._num;\n    this._num = num;\n    this.requestUpdate(\"num\", oldValue);\n  }\n\n  get num(): number {\n    return this._num;\n  }\n\n  private _arr: number[] = [0];\n\n  @property({ type: Array }) set arr(arr: number[]) {\n    console.log(\"set arr\", arr, this._arr)\n    const oldValue = this._arr;\n    this._arr = arr;\n    this.requestUpdate(\"arr\", oldValue);\n  }\n\n  get arr(): number[] {\n    return this._arr || ['no defined'];\n  }\n\n  renderList() {\n    const listTemplates = [];\n    for (const item of this.arr) {\n      listTemplates.push(html`<li>${item}</li>`);\n    }\n    console.log(listTemplates)\n    return listTemplates\n  }\n\n  override render() {\n    return html`\n      <h1>Array Prop!</h1>\n      <p>Arr: ${this.arr}</p>\n      <p>Num: ${this.num}</p>\n      <ul>\n        ${this.renderList()}\n      </ul>\n      <slot> รง</slot>\n    `;\n  }\n\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'my-element-obj': MyElementObj;\n  }\n}\n"]}